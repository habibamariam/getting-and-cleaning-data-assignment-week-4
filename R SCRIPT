library(dplyr)
##read the training data sets 
X_train<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/train/X_train.txt")
Y_train<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/train/y_train.txt")
Train_sub<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/train/subject_train.txt")
##reading the test data subsets
X_test<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/test/X_test.txt")
Y_test<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/test/y_test.txt")
Test_sub<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/test/subject_test.txt")

##part 1 assignment...merging the training and test data subsets to form 1 data sets.

X_merged<-rbind(X_train,X_test)
y_merged<-rbind(Y_train,Y_test)
sub_merged<-rbind(Train_sub,Test_sub)
##reading the data descriptions

data_description<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/features.txt")
##reading gthe activity labels table from the folder

activity_labels<-read.table("./getdata%2Fprojectfiles%2FUCI HAR Dataset (1)/UCI HAR Dataset/activity_labels.txt")

##extracting the mean and Standard Deviation for each measurement from the big tables

##selecting the variables from the variable names
selected_var<-data_description[grep("mean\\(\\)|std\\(\\)",data_description[,2]),]
X_merged_new<-X_merged[,selected_var[,1]]
## use descriptive activiy name 
colnames(y_merged)<-"activity"
y_merged$activityLabel<-factor(y_merged$activity,labels = as.character(activity_labels[,2]))
activityLabel<-y_merged[,1]
##appropriately label the data sets with desc var names
colnames(X_merged_new)<-data_description[selected_var[,1],2]
##from the data in step 4 creates a second , independent tidy set with average of 
# of each variable for each activity and each subject
colnames(sub_merged)<-"subject"
total<-cbind(X_merged_new,activityLabel,sub_merged)
total_mean<-total%>%group_by(activityLabel,subject)%>%summarise_each(funs(mean))
write.table(total_mean
